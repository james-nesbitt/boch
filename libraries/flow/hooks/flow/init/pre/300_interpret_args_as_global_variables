#!/bin/sh
#
# INIT:HOOK: Convert flow arguments into global variables
#

hook_version=2
hook_root="hook_flow_init_030"

# descriptoin method
hook_flow_init_030_description()
{
  echo "Interpret the passed arguments as global variables"
}

# help method
hook_flow_init_030_help()
{
  echo "hook->init->030 : Create the custom folder for the project

This hook will attempt to interpret the flow arguments into
global variables, which will reduce the dependence on args
for following hooks.
Following hooks won't need to interpret flow arguments as
much, and can depend on global settings.

  [-w|--buildnow] : instruct the init system to run docker build during init
     as it is needed.
  [-r|--required \"{builds}\"] : specify specific local builds that are dependencies
     for the project and need to be built during initialization
     (notice that without --buildnow this does nothing)

  [-l|--libraries] \"{additional libraries}\"] : load additional libraries during init to
     allow them to add settings and implement hooks.  This is used in particular by
     the following libraries, which have their own shortcuts
       --boot2docker : include the boot2docker library

       * the www-build library has it's own handler for shortcuts to this process.
         check for help on it directly (www-builds:general)

  [-n|--name {name}] : specify a project name.  This name is used for default values
     for other things, such as default image name, default hostname etc.  At this point
     it is a shortcut for settings multiples settings that are commonly the same.

  [-b|--build {build}] : specify a name that should be used as the new custom build
  [-t|--template {template}] : specify an specific build that should be used as the new custom build
  [-i|--image {image}] : specify an image name for a new custom build
  [-v|--version {version}] : specify an specific version/tag for the a custom build

  [-h|--hostname {hostname}] : specify default machine hostnames for containers in this project

"
  help_scope_add "hook:flow/init"
}

# execute method
hook_flow_init_030_execute()
{
  # used only for the init flow, to tell hooks that it is ok to build things
  build_execute_now=-1

  project_buildtemplate="${project_buildtemplate:-}"

  additional_libraries=""

  local flags=""
  while [ $# -gt 0 ]
  do
    case "$1" in
      -b|--build)
        project_build="${2}"
        shift
        ;;
      -h|--hostname)
        machine_hostname="${2}"
        shift
        ;;
      -i|--image)
        project_image="${2}"
        shift
        ;;
      -l|--libraries)
        additional_libraries="${additional_libraries} ${2}"
        shift
        ;;
      -n|--name)
        project_name="${2}"
        project_build="${2}"
        project_image="${2}"
        shift
        ;;
      -r|--required)
        required_builds="${2}"
        shift
        ;;
      -t|--template)
        project_buildtemplate="${2}"
        shift
        ;;
      -v|--version)
        project_version="${2}"
        shift
        ;;
      -w|--buildnow)
        #used in some of the hooks
        build_execute_now=0
        ;;
      *)
        break;
    esac
    shift
  done

}
