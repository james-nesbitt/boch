#!/bin/sh
#
# Create a global boch script, pointing to this library
#

hook_version=2
hook_root="hook_command_init_300"


# description method
hook_command_init_300_description()
{
  echo "Create a global boch script, pointing to this library"
}

# help method
hook_command_init_300_help()
{
  echo "HOOK->FLOW->INSTALL->300: Create a global boch script, pointing to this library

This hooks will create a soft-link to the boch script in one of the system /bin paths.  The
path used by default is the current user bin at ~/bin , but this can be overridden by using
the --bin-location argument

  [-b|--bin-location {bin/path}] : select an alternative location to use for the \"bin\" link
      which is installed to make the toolset globally available.  The default is ~/bin
"
}

# execute method
hook_command_init_300_execute()
{
  # bin path to install the symlink
  local path_bin="${path_bin:-${path_userhome}/bin}"

  local flags=""
  while [ $# -gt 0 ]
  do
    case "$1" in
      -b|--bin-location)
        path_bin="${2}"
        shift
        ;;
    esac
    shift
  done

  local path_link="${path_bin}/boch"
  if path_is "${path_link}"; then
    debug --level 5 --topic "HOOK->COMMAND->INSTALL->300" "Not creating a bin link to the boch script, as one already exists [path:${path_link}]"
  else
    debug --level 5 --topic "HOOK->COMMAND->INSTALL->300" "Creating a bin link to the boch script [link:${path_link}][source:${path_library}/boch]"
    ln -s "${path_library}/boch" "${path_link}"
    return $?
  fi
}
