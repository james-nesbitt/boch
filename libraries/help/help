#!/bin/sh
#
# Shared help system
#

###
# maintain a list of hook scopes for help, so that
#
# add to the list
help_scope_add()
{
  list_add "help_scope" $@
}
# retrieve the help topic list
help_scope_get()
{
  list_get "help_scope"
}

# primary help execute method
#
# @NOTE Try to use this if you want to get help on a topic
#       and you want it to react to a missing topic with a
#       general help message
#
help_execute()
{
  # this function should respond to bad usage
  if [ -z "$1" ]; then
    help_notopic_help
    return $?
  else
    help_topic_help $@
    return $?
  fi
}

# this is not likely to ever happen, unless it was called incorrectly
help_notopic_help()
{
  echo "
GENERIC HELP MESSAGE FOR NO TOPIC

- explain how the help system works
- explain that a help topic has not been passed

- give some examples of a proper help request   --> ./flow --help , ./command --help {command}

@NOTE this is likely being shown because of a developer error
"
}

# A callable help handler for a help topic
help_topic_help()
{
  local scope="$1"
  local topic=""
  shift

  # split the primary scope handler from the topic
  if [ "${scope}" != "${scope%:*}" ]; then
    topic="${scope##*:}"
    scope="${scope%:*}"
    if [ "${topic}" == "general" ]; then
      topic=""
    fi
  fi

  debug --level 5 --topic "HELP" "Running help hooks => hooks_execute \"help/${scope}\" ${topic} $@"
  hooks_execute "help/${scope}" ${topic} $@
  return $?
}

# provide the list help for all active help scopes
help_topic_list()
{
  local scope=""
  local topic=""

  for scope in $@; do
    if [ "${scope}" != "${scope%:*}" ]; then
      topic="${scope##*:}"
      scope="${scope%:*}"
    fi
    debug --level 7 --topic "HELP->TOPICLIST" "Running list action on topic help hooks [scope:${scope}][topic:${topic}]"
    hooks_execute "help/${scope}" --action "list" ${topic}
  done
}

# list all the topics that have been added to scope
help_scope_list()
{
  help_topic_list `help_scope_get`
}
