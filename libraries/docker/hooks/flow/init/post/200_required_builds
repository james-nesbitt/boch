#!/bin/sh
#
# Run the required project builds
#

hook_version=2
hook_root="hook_init_post_200"

# description method
hook_init_post_200_description()
{
  echo "build required project images"
}

# help method
hook_init_post_200_help()
{
  echo "
HOOK->FLOW->INIT->POST->200: Build the required project images

  [-f|--finalize] : Finalize the init process, so build required images

  [-b|--builds {builds}] : specify an alternate list of builds that should be built
"
}

# execute method
hook_init_post_200_execute()
{

  local flags=""
  while [ $# -gt 0 ]
  do
    case "$1" in
      -f|--finalize)
        build_execute_now=0
        ;;
    esac
    shift
  done

  if [ ${build_execute_now} -eq 0 ]; then

    debug --level 6 --topic "HOOK->COMMAND->INIT->POST->200" "Required build [builds:${required_build}]"
    local build=""
    for build in ${required_builds}; do
      if [ `docker_image_exists "${build}"` -eq 0 ]; then
        debug --level 5 --topic "HOOK->COMMAND->INIT->POST->200" "Required build exists, skipping build [build:${build}]"
      else
        debug --level 5 --topic "HOOK->COMMAND->INIT->POST->200" "Building required build [build:${build}]"
        library_execute "command" "build" --build "${build}" --image "${build}" --version "${image_version}"
      fi
    done

  else
    debug --level 5 --topic "HOOK->COMMAND->INIT->POST->200" "Not building any required builds, as we were not instructed to perform any builds [builds:${required_build}]"
  fi
}
