#!/bin/sh
#
# 600 Add any library hooks folder to the hooks path list
#

hook_version=2
hook_root="hook_settings_library_pre_600"

# description method
hook_settings_library_pre_600_description()
{
  echo "If a library has a settings file, include it"
}

# help method
hook_settings_library_pre_600_help()
{
  echo "
Add any settings file that a library may have in it's folder

This hooks runs on any libraries that are loaded after the settings
system is run.  Libraries that are already loaded before the settings
hooks are registered are included using a different hook, in the
standard hook-set.  This hook takes over after standard settings
have been loaded.

"
}

# execute method
hook_settings_library_pre_600_execute()
{
  local library=""
  local path=""

  while [ $# -gt 0 ]
  do
    case "$1" in
      -l|--library)
    library=$2
    shift
    ;;
      -p|--path)
    path=$2
    shift
    ;;
      *)
      break;; # terminate while loop
    esac
    shift
  done

  case "${library}" in
    "settings")
      debug --level 8 --topic "HOOKS->SETTINGS->LIBRARY->ADD->PRE->600" "Skipping libraries that are hardcoded to not use settings (the project library, and the settings library) [library:${library}][path:${path}]"
    ;;
    *)
      path="${path}/settings"

      if path_is --exec "${path}"; then
        path_include "${path}"
        local success=$?
        if [ $success -eq 0 ]; then
          debug --level 6 --topic "HOOKS->SETTINGS->LIBRARY->ADD->PRE->600" "Library settings file included. [library:${library}][path:${path}]"
        else
          debug --level 4 --topic "HOOKS->SETTINGS->LIBRARY->ADD->PRE->600" "Library settings file include produced an error [library:${library}][path:${path}][success:${success}]"
        fi
      fi
    ;;
  esac

}
