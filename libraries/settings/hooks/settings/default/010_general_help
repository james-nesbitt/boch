#!/bin/sh
#
#
#

hook_version=2
hook_root="hook_settings_default_010"

hook_settings_default_010_description()
{
  echo "Add general help to the default settings"
}

hook_settings_default_010_help()
{
  echo "
HOOK->SETTINGS->DEFAULT->010 Add general help info to the default settings file

"
}

hook_settings_default_010_execute()
{
  echo "####
# General help and information
#
# The settings here are more guideline given to you with additional information
# used by the system.  None of these are enabled by default, and can be removed
# safely, if you are not interested in them.
# Make sure that you don't remove the ## SETTINGS FROM HOOK line, or the init
# system may try to add the settings again.
#

####
# Important paths for the source code
#
# @NOTE you have access to the following system paths:
#  - \${path_library} : path to the folder that contains the all of these tools for managing docker
#  - \${path_project} : root folder for your project (actually just one up from your manage path)
#        (this is often not used for anything other than the root of other default variables)
#  - \${path_userhome} : user home
#  - \${path_projectconf} : custom project folder, used to keep settings used for this particulare project
#        This is actually treated as a library, so it can container hooks, other libraries, commands
#        and it's own settings file
#
# @NOTE you could try changing the above paths in your settings file, but the results are not predictable

####
# Log file
#
# path to the log file
# @NOTE to enable logging try passing --log [{level}] to you command line
#
#path_log="${path_log}"

####
# Load Libraries
#
# Libraries are function sets that can be included with
# library_include  and have methods executed using
# library_execute.
# You don't need to use this system, but it is used
# for all sorts of things, including command loading,
# and the help system.  It has a lot of build in debugging
#
# if you do load a library, and it has a hooks folder, those
# hooks will automatically be activated.
#
# @NOTE your custom project folder is treated as a library, so
#   it gets all of the features of a library.  It can also contain
#   it's own libraries.  The best place to put new libraries
#   is in the libraries sub-folder of your project.
#
#library_load \"library_name\"

"
}
