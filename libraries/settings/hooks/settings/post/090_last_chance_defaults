#!/bin/sh
#
# Some last chance variable sets, for things that should have default values
#

hook_version=2
hook_root="hook_settings_post_090"

# description method
hook_settings_post_090_description()
{
  echo "hook->settings (post) 090: include some safe values for important variables"
}

# help method
hook_settings_post_090_help()
{
  echo "
hook->settings (post) 090: include some safe values for important variables

"
}

# execute method
hook_settings_post_090_execute()
{
  ###################################################
  # Overridable settings for docker and the machine #
  ###################################################
  # these are here because they tend to depend on each
  # other, and you may want to override one of the top
  # items, and let the rest be based on it.

  # General project name, should be file-safe
  project_name="${project_name:-${path_project##*/}}"

  # Docker build images
  # Generally needed to start making containers (a space separated queue of builds)
  # and are the ddefault builds built with the build command.
  project_builds="${project_builds:-"wwwserver-cnpm wwwserver-cnpm-dev"}"
  # The docker image, which will be used for containers, (and building)
  project_image="${project_image:-project}"
  # by default all containers will run from the base image, which is created by build, however maybe we want to use a different version for advanced features
  project_imageversion="${project_imageversion:-"latest"}" # Used for run/shell/commit
  # use a default container name, default to a combination of image and version
  project_container="${project_container:-${project_image}_${project_imageversion}}"

  # Default running args
  machine_runargs=${machine_runargs:-""}
  # hostname used inside the running container
  machine_hostname="${machine_hostname:-$project_container}"
  # live mounts that are used for containers
  settings_mount_addmount "${path_project}/source:/app/source"
  # Prefered shell/command for the Machine
  machine_shell=${machine_shell:-"/bin/bash"}
  # default run args for shell command
  machine_shellrunargs=${machine_shellrunargs:-"--publish-all=true"}

}
