#!/bin/sh
#
# Run the required project builds
#

hook_version=2
hook_root="hook_init_post_020"

# description method
hook_init_post_020_description()
{
  echo "build required project images"
}

# help method
hook_init_post_020_help()
{
  echo "
HOOK->FLOW->INIT->POST->020: Build the required project images

[-b|--builds {builds}] : specify an alternate list of builds that should be built

"
}

# execute method
hook_init_post_020_execute()
{

  command_include build

  required_builds="${required_builds:-}"

  local flags=""
  while [ $# -gt 0 ]
  do
    case "$1" in
      -b|--builds)
        required_builds="${2}"
        shift
        ;;
      -v|--version)
        project_version="${2}"
        shift
        ;;
      *)
        break;
    esac
    shift
  done

  local build=""

  debug --level 6 --topic "HOOK->COMMAND->INIT->POST->020" "Required build [builds:${required_build}]"
  for build in ${required_builds}; do
    if [ `_docker_image_exists "${build}"` -eq 0 ]; then

      debug --level 5 --topic "HOOK->COMMAND->INIT->POST->020" "Required build exists [build:${build}]"

    else

      debug --level 5 --topic "HOOK->COMMAND->INIT->POST->020" "Building required build [build:${build}]"
      command_execute "build" --build "${build}" --image "${build}" --version "${image_version}"

    fi
  done

}
