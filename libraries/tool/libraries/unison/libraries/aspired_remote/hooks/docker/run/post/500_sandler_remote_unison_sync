#!/bin/sh
#
# INIT:HOOK: Describe you hook
#
# @NOTE this hook will only execute if IT IS EXECUTABLE
# @NOTE that the file name used has the number prefix to sort
#     across all hooks that are in scope, across all folders
#

# Hook version is always 2, it tells the hook handler that
# you will have the description, help and execute methods
hook_version=2
# Hook root is the base of all function names in this hook
hook_root="hook_aspired_remote_unison_sync_500"

# Description method
#
# This description is used in help lists, when lists of hooks
# that affect a scope are shown.
hook_aspired_remote_unison_sync_500_description()
{
  echo "Start Unison syncing"
}

# help method
#
# Proovide full help text for the hook, including which arguments
# it may depend on
hook_aspired_remote_unison_sync_500_help()
{
  echo "hook->example->500 : Example hook help header

Describe the hook

  [-a|--argument {additional parameter} : describe what arguments
      the hook may act on

@NOTE add some useful notes

@TODO indicate what work still needs to be done
"
}

# execute method
hook_aspired_remote_unison_sync_500_execute()
{

  local flags=""
  while [ $# -gt 0 ]
  do
    case "$1" in
      -c|--container)
        local container=$2
        shift
        ;;
      -d|--id)
        local containerID=$2
        shift
        ;;
      -e|--execute)
        local command="${2}"
        shift
        ;;
      -h|--hostname)
        flags="${flags} --hostname=\"$2\""
        shift
        ;;
      -i|--image)
        local image="${2}"
        shift
        ;;
      -n|--ip)
        local ip="${2}"
        shift
        ;;
      -v|--version)
        local version="${2}"
        shift
        ;;
      -P|--allports)
        flags="${flags} --publish-all=true"
        ;;
      --startargs)
        # ignore these for now
        shift
        break
        ;;
      *)
        break;; # terminate while loop
    esac
    shift
  done

  command_load "exec"

  debug --level 5 --topic "HOOK->REMOTE->DOCKER->RUN->POST->500" "Starting Unison sync. Unison needs to be setup and started in the image beforehand."
  #exec_exec_standard --terminal --background --container "${container}" unison -socket 45678

  #remove archive
  rm ~/Library/Application\ Support/Unison/ar10b3272da8d0034d0544f39ab839cc9b

  sleep 10
  debug --level 5 --topic "unison -silent -ignore 'Name {.git,*.swp}' -batch -confirmbigdel=false -ui text `path_expand "root~"` socket://${ip}:45678//app/source"
  unison -silent -ignore 'Name {.git,*.swp}' -batch -confirmbigdel=false -ui text `path_expand "root~"` socket://${ip}:45678//app/source
  debug --level 5 --topic "fswatch -0 -o `path_expand "root~"` | xargs -0 -n 1 -I {} unison -silent -ignore 'Name {.git,*.swp}' -batch -confirmbigdel=false -ui text `path_expand "root~"` socket://${ip}:45678//app/source"
  fswatch -0 -o `path_expand "root~"` | xargs -0 -n 1 -I {} unison -silent -ignore 'Name {.git,*.swp}' -batch -confirmbigdel=false -ui text `path_expand "root~"` socket://${ip}:45678//app/source

}
