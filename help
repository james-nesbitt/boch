#!/bin/sh
#
# Help script
#

############################
# Process config Arguments #
############################
# -h|--help : get help instead of running the command
# -v|--verbose {level} : output debugging info
# -l|--log {level} : enable debug logging
# -f|--force : ignore critical errors (don't halt)
#
# @TODO find a way past the described silliness

help="no"
helptopic=""
# Collect aliases, before the alias library is available
alias_aliases=""

while [ $# -gt 0 ];
do
  case "$1" in
    -h|--help)
      # if an string with a colon (topic separator) was passed, take it as the help topic
      if [ -n "$2" ] && [ "$2" != "${2##*:}" ]; then
        helptopic=${2}
        shift
      fi
      help="yes"
      ;;

    -v|--verbose)
      vflag=on
      # if an integer level was passed, take it, otherwise default to 5
      if [ -n "$2" ] && [ -z "${2##[0-9]}" ]; then
        debug=${2}
        shift
      else
        debug=5
      fi
      ;;
    -l|--log)
      # if an integer level was passed, take it, otherwise default to 8
      if [ -n "$2" ] && [ -z "${2##[0-9]}" ]; then
        log=${2}
        shift
      else
        log=8
      fi
      ;;
    -f|--force)
      # lower the critical error level so that errors don't halt
      _debug_critical_level=0
      ;;
    @*)
      alias_aliases="${alias_aliases} ${1:1}"
      ;;
    -*)
        echo >&2 "usage: $0 [-v|--verbose] [-l|--log [{log level}]]  [command ...].  Try \"help\" for more instructions."
        exit 1;;
    *)
        break;; # terminate while loop
  esac
  shift
done

#####################################################
# Find out where we are, and connect to the _config #
#####################################################

# path to the root of this project
path_script="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
# include _config, which will do the rest of the work.
source "${path_script}/_init"

#########################################
# Determine what help topics to process #
#########################################

topic="$1"
shift

# use a default topic
if [ -z "$topic" ]; then
  topic="help"
else
  if [ "${topic}" == "${topic%:*}" ]; then
    topic="help:${topic}"
  fi
fi

# Maybe print some debug info (debug command loses carriage returns, so we echo ourselves)
if [ $debug -gt 3 ]; then
  echo "
HELP: final help settings: [
  >HELP TOPIC
  -->Topic:${topic}
  -->Topic Args:${@}
]"
fi

######################
# Process Help topic #
######################

debug --level 5 --topic "HELP" "Running help handler for help topic => help_execute \"${topic}\" $@"
help_execute "${topic}" $@
