#!/bin/sh
#
# Command functionality
#
# include a command source
#
# $1 : command name (without full path, but can be a subpath)
#
# @NOTE commands can only be included once

# path to the command shell scripts
path_commands="${path_commands:-"${path_manage}/commands"}"

# Remember included commands so we can prevent repeats
included_commands=""
_include_command()
{
  local com=$1
  shift

  # check if already attempted (if not mark it as attempted)
  case " $included_commands " in
    *" ${com} "*)
        debug --level 7 --topic "COMMAND:INCLUDE" "_include_command [command:${com}][included_commands:${included_commands}] command already included!"
        return 1
      ;;
  esac
  included_commands="${included_commands} ${com}"

  local path="${path_commands}/${com}"

  debug --level 8 --topic "COMMAND:INCLUDE" "_include_command [command:${com}] : Including command.  Handing off to _include_source ==> _include_source \"${path}\" $@ "
  _include_source "${path}" $@
  local success=$?
  if [ $success -eq 0 ]; then
    debug --level 7 --topic "COMMAND:INCLUDE" "command included \"${com}\""
  else
    debug --level 6 --topic "COMMAND:INCLUDE" "command include failed for \"${com}\""
  fi
  return $sucess
}

command_execute()
{
  local COMMAND=$1
  shift

  # include the command source file
  _include_command $COMMAND $@

  # default action
  local action="execute"

  while [ $# -gt 0 ]
  do
    case "$1" in
      -a|--action)
        action=$2
        shift
        ;;
      *)
          break;; # terminate while loop
    esac
    shift
  done

  command_function="${COMMAND}_execute"
  debug --level 7 --topic "COMMAND:EXECUTE:050" "command [ ${COMMAND} ] handing off to command script : ${command_function} $@"
  eval ${command_function} $@
  success=$?
  if [ $success == 0 ]; then
    echo "$result"
    debug --level 8 --topic "COMMAND:EXECUTE:050" "${COMMAND} succeeded."

  else
    debug --level 6 --topic "COMMAND:EXECUTE:050" "Command execution failed for command ${COMMAND}."
  fi
  exit $sucess

}
